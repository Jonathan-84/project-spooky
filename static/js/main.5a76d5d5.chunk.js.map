{"version":3,"sources":["components/Navbar.js","pages/home.js","components/halloween/upcoming.js","pages/halloween.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["today","format","Date","Navbar","react_default","a","createElement","Fragment","className","react_router_dom","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","halloween","console","log","result","differenceInDays","Home","hocusPocus","daysUntilHP","Upcoming","Halloween","upcoming","App","basename","process","components_Navbar","react_router","exact","path","component","render","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode","src_App","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5a76d5d5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { format } from 'date-fns';\r\nlet today = format(new Date(), \"MM-dd-yyyy\") \r\nfunction Navbar(){\r\n\r\n    return (\r\n      <>\r\n\r\n<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n<h2>\r\n                      <Link to={\"/Home\"} className=\" font-weight-bold navbar-brand nav-text nav-link\"> ðŸ“… The Festivities Begin In ...</Link>\r\n                      </h2> \r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n    <ul className=\"navbar-nav\">\r\n\r\n               <ul className=\"nav-item dropdown\">\r\n               <Link to={\"/halloween\"} className= \"title-text\">Halloween</Link>\r\n               </ul>\r\n\r\n                <ul className=\"nav-item dropdown\">\r\n                <Link to={\"/mars\"} className=\"title-text\">XMas</Link>\r\n\r\n      </ul>\r\n      </ul>        \r\n       <ul className=\"navbar-nav\">\r\n      <ul>\r\n                <Link to={\"/about\"} className=\"title-text\">About</Link>\r\n                </ul>\r\n            \r\n                </ul>\r\n        </div>\r\n        <ul className=\"navbar-nav\">\r\n        <ul>\r\n                <h2 className='fs-4'>Today: {today}</h2>\r\n                </ul>\r\n                </ul>\r\n  \r\n</nav>\r\n          \r\n\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default Navbar;\r\n  ","import React, {} from 'react';\r\n// import sleepyhollow from '../assets/sleepy-hollow.jpg';\r\n\r\nimport '../App.css';\r\nimport { differenceInDays, format } from 'date-fns';\r\n\r\n\r\nlet today = format(new Date(), \"MM-dd-yyyy\")\r\nlet halloween = new Date( 2022, 9, 31)\r\nconsole.log (today, halloween)\r\n\r\nconst result = differenceInDays(\r\nnew Date(halloween),\r\nnew Date(today)\r\n)\r\n\r\nconsole.log(result)\r\n\r\n// var day1 = new Date(now);\r\n// var day2 = new Date(\"10/31/2022\");\r\n\r\n// var difference= Math.abs(day2-day1);\r\n// let days = difference/(1000 * 3600 * 24)\r\n\r\n\r\nfunction Home() {\r\n\r\n\r\n    return (\r\n    <>\r\n   <h1>I'm a Placeholder</h1>\r\n\r\n    </>\r\n    );\r\n  };\r\n    \r\nexport default Home;\r\n\r\n","import React, {} from 'react';\r\n\r\n\r\nimport { differenceInDays, format } from 'date-fns';\r\n\r\n/// What should be the tiles for Halloween? Kick off of the festivities?\r\n\r\nlet today = format(new Date(), \"MM-dd-yyyy\")\r\n\r\nlet hocusPocus = format(new Date( 2022, 8, 30), \"MM-dd-yyyy\")\r\nconsole.log (today, hocusPocus)\r\n\r\nconst daysUntilHP = differenceInDays(\r\nnew Date(hocusPocus),\r\nnew Date(today)\r\n)\r\n\r\n\r\n\r\n// var day1 = new Date(now);\r\n// var day2 = new Date(\"10/31/2022\");\r\n\r\n// var difference= Math.abs(day2-day1);\r\n// let days = difference/(1000 * 3600 * 24)\r\n\r\n\r\nfunction Upcoming() {\r\n\r\n\r\n    return (\r\n    <>\r\n\r\n  <div className=\"col-md\">\r\n    <div className=\"border m-3\">\r\n      <h2>On Upcoming</h2>\r\n      <ul>\r\n        <li className='fw-bold'>Hocus Pocus 2: Disney+ Premier {hocusPocus} in {daysUntilHP}</li>\r\n        <br></br>\r\n        <br></br>\r\n      </ul>\r\n      <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Adipisci, ipsa animi molestiae fuga nemo quae asperiores aspernatur rem accusantium? Totam, repellendus? Ipsum repudiandae eaque vitae rem harum, ipsam nesciunt neque?</p>\r\n    </div>\r\n    </div>\r\n\r\n    </>\r\n    );\r\n  };\r\n    \r\nexport default Upcoming;\r\n\r\n","import React, {} from 'react';\r\n// import sleepyhollow from '../assets/sleepy-hollow.jpg';\r\nimport Upcoming from '../components/halloween/upcoming';\r\n\r\nimport { differenceInDays, format } from 'date-fns';\r\n\r\n/// What should be the tiles for Halloween? Kick off of the festivities?\r\n\r\nlet today = format(new Date(), \"MM-dd-yyyy\")\r\nlet halloween = new Date( 2022, 9, 31)\r\nconsole.log (today, halloween)\r\n\r\nconst result = differenceInDays(\r\nnew Date(halloween),\r\nnew Date(today)\r\n)\r\n\r\nconsole.log(result)\r\n\r\n// var day1 = new Date(now);\r\n// var day2 = new Date(\"10/31/2022\");\r\n\r\n// var difference= Math.abs(day2-day1);\r\n// let days = difference/(1000 * 3600 * 24)\r\n\r\n\r\nfunction Halloween() {\r\n\r\n\r\n    return (\r\n    <>\r\n    <div className='mt-4 p-5 rounded jumbo d-flex justify-content-center'>\r\n      <div className=''>\r\n        <h2 className='p-3 border border-dark text-center bg-light rounded justify-content-center align-self-center fs-1 fw-bold'>Halloween</h2>\r\n        </div>\r\n   \r\n      </div>\r\n\r\n\r\n\r\n    <div className=\"container\">\r\n    <h1 className=\"text-center\">{result} Days Until Halloween!</h1>\r\n  <div className=\"row\">\r\n  <Upcoming></Upcoming>\r\n    <div className=\"col-md\">\r\n    <div className=\"border m-3\">\r\n       <h2>Lorem ipsum dolor sit amet</h2>\r\n       <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Adipisci, ipsa animi molestiae fuga nemo quae asperiores aspernatur rem accusantium? Totam, repellendus? Ipsum repudiandae eaque vitae rem harum, ipsam nesciunt neque?</p>\r\n    </div>\r\n    </div>\r\n    <div className=\"col-md\">\r\n    <div className=\"border m-3\">\r\n      <h2>Lorem ipsum dolor sit amet</h2>\r\n      <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Adipisci, ipsa animi molestiae fuga nemo quae asperiores aspernatur rem accusantium? Totam, repellendus? Ipsum repudiandae eaque vitae rem harum, ipsam nesciunt neque?</p>\r\n    </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n    \r\n   \r\n\r\n    </>\r\n    );\r\n  };\r\n    \r\nexport default Halloween;\r\n\r\n","import React from 'react';\n//\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport Home from './pages/home'\nimport Halloween from './pages/halloween'\n\n\nfunction App() {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n<>\n<Navbar />\n<Switch>\n         <Route exact path= {'/home'} component={Home}/>\n         <Route exact path= {'/halloween'} component={Halloween}/>\n         <Route render={() => <Redirect to={'/home'} />} />\n\n</Switch>\n\n\n</>\n\n    \n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}